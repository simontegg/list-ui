{
  "name": "dom-delegator",
  "version": "9.0.1",
  "description": "Decorate elements with delegated events",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/dom-delegator.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/dom-delegator",
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/dom-delegator/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "cuid": "^1.2.4",
    "data-set": "^3.1.0",
    "global": "^4.2.1",
    "individual": "^2.0.0",
    "inherits": "^2.0.1",
    "xtend": "^2.2.0"
  },
  "devDependencies": {
    "cuid": "^1.2.4",
    "event-sinks": "~1.0.1",
    "istanbul": "^0.2.6",
    "jshint": "^2.5.0",
    "pre-commit": "0.0.5",
    "run-browser": "^1.3.1",
    "synthetic-dom-events": "git://github.com/Raynos/synthetic-dom-events",
    "tap-spec": "^0.1.9",
    "tape": "^2.12.3"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/dom-delegator/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "jshint . && node ./test/index.js | tap-spec",
    "browser": "run-browser ./test/index.js",
    "phantom": "run-browser ./test/index.js -b | tap-spec",
    "cover": "istanbul cover --print detail ./test/index.js",
    "view-cover": "istanbul report html && google-chrome ./coverage/index.html"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "ie/8..latest",
      "firefox/16..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# dom-delegator\n\n<!--\n    [![build status][1]][2]\n    [![NPM version][3]][4]\n    [![Coverage Status][5]][6]\n    [![gemnasium Dependency Status][7]][8]\n    [![Davis Dependency status][9]][10]\n-->\n\n<!-- [![browser support][11]][12] -->\n\nDecorate elements with delegated events\n\n`dom-delegator` allows you to attach an `EventHandler` to \n  a dom element.\n\nWhen event of the correct type occurs `dom-delegator` will\n  invoke your `EventHandler`\n\nThis allows you to seperate your event listeners from your\n  event writers. Sprinkle your event writers in the template\n  in one part of your codebase. Attach listeners to the event\n  sources in some other part of the code base.\n\nThis decouples the event definition in the DOM from your event\n  listeners in your application code.\n\nAlso see [`html-delegator`](https://github.com/Raynos/html-delegator)\n  for the same idea using html `data-` attributes.\n\n## Example\n\n```html\n<div class='foo'>\n    <div class='bar'>bar</div>\n    <div class='baz'>baz</div>\n</div>\n```\n\n```js\nvar document = require(\"global/document\")\nvar Delegator = require(\"dom-delegator\")\nvar EventEmitter = require(\"events\").EventEmitter\n\nvar del = Delegator()\nvar emitter = EventEmitter()\nemitter.on('textClicked', function (value) {\n    // either 'bar' or 'bar' depends on which \n    // `<div>` was clicked\n    console.log(\"doSomething\", value.type)\n})\n\nvar elem = document.querySelector(\".foo\")\n\n// add individual elems. (in a different file?)\ndel.addEventListener(elem.querySelector(\".bar\"), \"click\", function (ev) {\n  emmitter.emit('textClicked', { type: 'bar' })\n})\ndel.addEventListener(elem.querySelector(\".baz\"), \"click\", function (ev) {\n  emitter.emit('textClicked', { type: 'baz' })\n})\n```\n\n## Example (global listeners)\n\nSometimes you don't want to add events bound to an element but\n  instead listen to them globally.\n\n```js\nvar Delegator = require(\"dom-delegator\")\n\nvar d = Delegator()\nd.addGlobalEventListener(\"keydown\", function (ev) {\n    // hit for every global key press\n    // can implement keyboard shortcuts\n\n\n})\n\nd.addEventListener(document.documentElement, \"keydown\", function (ev) {\n    // hit for every keydown that is not captured\n    // by an element listener lower in the tree\n\n    // by default dom-delegator does not bubble events up\n    // to other listeners on parent nodes\n\n    // you can use global event listeners to intercept everything\n    // even if there are listeners lower in the tree\n})\n```\n\n## Installation\n\n`npm install dom-delegator`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/dom-delegator.png\n  [2]: https://travis-ci.org/Raynos/dom-delegator\n  [3]: https://badge.fury.io/js/dom-delegator.png\n  [4]: https://badge.fury.io/js/dom-delegator\n  [5]: https://coveralls.io/repos/Raynos/dom-delegator/badge.png\n  [6]: https://coveralls.io/r/Raynos/dom-delegator\n  [7]: https://gemnasium.com/Raynos/dom-delegator.png\n  [8]: https://gemnasium.com/Raynos/dom-delegator\n  [9]: https://david-dm.org/Raynos/dom-delegator.png\n  [10]: https://david-dm.org/Raynos/dom-delegator\n  [11]: https://ci.testling.com/Raynos/dom-delegator.png\n  [12]: https://ci.testling.com/Raynos/dom-delegator\n",
  "readmeFilename": "README.md",
  "_id": "dom-delegator@9.0.1",
  "_shasum": "261a0b3494055ee43d843c729339add41d388130",
  "_from": "dom-delegator@^9.0.0",
  "_resolved": "https://registry.npmjs.org/dom-delegator/-/dom-delegator-9.0.1.tgz"
}
