{
  "name": "virtual-hyperscript",
  "version": "4.4.0",
  "description": "A DSL for creating virtual trees",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/virtual-hyperscript.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/virtual-hyperscript",
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/virtual-hyperscript/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {
    "data-set": "^3.0.0",
    "error": "^4.1.1",
    "vtree": "0.0.16"
  },
  "devDependencies": {
    "tape": "^2.13.3"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/virtual-hyperscript/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "node ./test/index.js",
    "start": "node ./index.js",
    "watch": "nodemon -w ./index.js index.js",
    "travis-test": "istanbul cover ./test/index.js && ((cat coverage/lcov.info | coveralls) || exit 0)",
    "cover": "istanbul cover --report none --print detail ./test/index.js",
    "view-cover": "istanbul report html && google-chrome ./coverage/index.html",
    "test-browser": "testem-browser ./test/browser/index.js",
    "testem": "testem-both -b=./test/browser/index.js"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "ie/8..latest",
      "firefox/16..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# virtual-hyperscript\n\n<!--\n    [![build status][1]][2]\n    [![NPM version][3]][4]\n    [![Coverage Status][5]][6]\n    [![gemnasium Dependency Status][7]][8]\n    [![Davis Dependency status][9]][10]\n-->\n\n<!-- [![browser support][11]][12] -->\n\nA DSL for creating virtual trees\n\n## Example\n\n```js\nvar h = require('virtual-hyperscript')\n\nvar tree = h('div.foo#some-id', [\n    h('span', 'some text'),\n    h('input', { type: 'text', value: 'foo' })\n])\n```\n\n## Docs\n\nSee [hyperscript](https://github.com/dominictarr/hyperscript) which has the\n  same interface.\n  \nExcept `virtual-hyperscript` returns a virtual DOM tree instead of a DOM\n  element.\n\n### `h(selector, properties, children)`\n\n`h()` takes a selector, an optional properties object and an\n  optional array of children or a child that is a string.\n  \nIf you pass it a selector like `span.foo.bar#some-id` it will\n  parse the selector and change the `id` and `className`\n  properties of the `properties` object.\n  \nIf you pass it an array of `children` it will have child\n  nodes, normally ou want to create children with `h()`.\n  \nIf you pass it a string it will create an array containing\n  a single child node that is a text element.\n\n### Special properties in `h()`\n\n#### `key`\n\nIf you call `h` with `h('div', { key: someKey })` it will\n  set a key on the return `VNode`. This `key` is not a normal\n  DOM property but is a virtual-dom optimization hint.\n\nIt basically tells virtual-dom to re-order DOM nodes instead of\n  mutating them.\n\n#### `namespace`\n\nIf you call `h` with `h('div', { namespace: \"http://www.w3.org/2000/svg\" })`\n  it will set the namespace on the returned `VNode`. This\n  `namespace` is not a normal DOM property, instead it will\n  cause `vdom` to create a DOM element with a namespace.\n\n#### `data-*`\n\nIf you call `h` with `h('div', { data-foo: \"bar\" })` it will\n  set `data-foo` to be a `VHook` that set's a `DataSet` property\n  named `foo` with the value `\"bar\"` on the actual dom element.\n\nIt will not set a property `data-foo` on the dom element.\n\nThis means that somewhere else in your code you can use\n  `DataSet(elem).foo` to read this property.\n\n#### `ev-*`\n\nIf you call `h` with `h('div', { ev-click: function (ev) { } })` it\n  will store the event handler on the dom element. It will not\n  set a property `'ev-foo'` on the DOM element.\n\nThis means that `dom-delegator` will recognise the event handler\n  on that element and correctly call your handler when an a click\n  event happens.\n\n## Installation\n\n`npm install virtual-hyperscript`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/virtual-hyperscript.png\n  [2]: https://travis-ci.org/Raynos/virtual-hyperscript\n  [3]: https://badge.fury.io/js/virtual-hyperscript.png\n  [4]: https://badge.fury.io/js/virtual-hyperscript\n  [5]: https://coveralls.io/repos/Raynos/virtual-hyperscript/badge.png\n  [6]: https://coveralls.io/r/Raynos/virtual-hyperscript\n  [7]: https://gemnasium.com/Raynos/virtual-hyperscript.png\n  [8]: https://gemnasium.com/Raynos/virtual-hyperscript\n  [9]: https://david-dm.org/Raynos/virtual-hyperscript.png\n  [10]: https://david-dm.org/Raynos/virtual-hyperscript\n  [11]: https://ci.testling.com/Raynos/virtual-hyperscript.png\n  [12]: https://ci.testling.com/Raynos/virtual-hyperscript\n",
  "readmeFilename": "README.md",
  "_id": "virtual-hyperscript@4.4.0",
  "_shasum": "c8d8f843413597c16c690ae7214bc26453c4162f",
  "_from": "virtual-hyperscript@^4.4.0",
  "_resolved": "https://registry.npmjs.org/virtual-hyperscript/-/virtual-hyperscript-4.4.0.tgz"
}
